{
  "examples": [
    {
      "name": "Простые массивы",
      "states": [
        "Массив можно создать двумя способами: объявить его пустым или сразу заполнить значениями. Рассмотрим первый способ",
        "Чтобы сразу заполнить массив значениями, поместите их внутри литерала массива, разделив запятыми",
        "Еще один не совсем обычный способ сделать массив - это сконвертировать в него строку со значениями, разделенными специальным символом. Например, запятой",
        "Т.к. массив содержит список значений, его нельзя вывести на экран как простую переменную",
        "Чтобы узнать что содержится в массиве (для отладочных целей) можно воспользоваться функциями var_dump или print_r",
        "Все значения массива можно преобразовать в строку, где эти значения будут разделены специальным символом. Например, запятой",
        "Чтобы получить значение из массива необходимо указать его индекс. Индексация значения начинается с нуля, т.е. индекс первого значения массива всегда будет равен нулю.",
        "Чтобы получить последнее значение, необходимо узнать его индекс. Для этого надо узнать общее кол-во элементов и отнять единицу.",
        "Для добавления нового значения в конец массива используйте литерал 'пустые скобки'",
        "Вы можете обновить любой элемент в массиве указав его индекс и присвоив новое значение",
        "Используйте функцию array_unshift, чтобы добавить новый элемент в начало массива",
        "Для удаления элементов из массива существует функция unset, которой надо передавать индекс удаляемого элемента",
        "Чтобы узнать, есть ли в массиве элемент с определенным индексом используйте функцию isset",
        "Для проверки существования значения в массиве используйте функцию in_array",
        "Чтобы 'забрать' первый элемент массива существует функция array_shift. Она возвращает первый элемент и одновременно удаляем его из массива",
        "Функция array_merge умеет объединять два массива в один",
        "Элементы массива можно сортировать, т.е. менять их порядок. Например, можно отсортировать, расположив элементы в алфавитном порядке их значений"
      ]
    },
    {
      "name": "Ассоциативные массивы",
      "states": [
        "Добавлять новое значение в ассоциативный массив надо вместе с ключом. Если в массиве не было такого ключа, то это значение добавится, а если было - заменится",
        "Прочитать значение из ассоциативного массива можно также как и из простого, только вместо индекса используйте ключ",
        "Замена значений не отличается от добавления новых",
        "Чтобы получить последнее значение из ассоциативного массива, надо вначале получить его ключи, определить последний ключ и использовать его для получения значения"
      ]
    },
    {
      "name": "Двумерные массивы",
      "states": [

      ]
    },
    {
      "name": "Циклы",
      "states": [

      ]
    },
    {
      "name": "Функции",
      "states": [

      ]
    }
  ]
}