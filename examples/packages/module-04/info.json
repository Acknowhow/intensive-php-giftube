{
  "examples": [
    {
      "name": "HTTP-заголовки",
      "states": [
        "Вначале объявим список заголовков, которые нас интересуют. Дадим каждому заголовку описательное имя",
        "В цикле для каждого заголовка получим имя ключа в массиве $_SERVER",
        "Проверяем, что в массиве $_SERVER есть заголовок с таким ключом",
        "Выводим на экран описание каждого заголовка вместе с его значением"
      ]
    },
    {
      "name": "Параметры запроса",
      "states": [
        "Подключаем массив с двумя гифками и функцию-шаблонизатор",
        "Определяем переменную, в который поместим массив с найденной гифкой",
        "Проверяем существование параметра запроса с идентификатором переменной",
        "Обходим весь список гифок и ищем там гифку с ID равным полученным из параметра запроса",
        "Если переменная $gif ничего не содержит, значит гифку мы не нашли. В этом случае устанавливаем код ответа в 404 - страница не найдена",
        "Подключаем лейаут и шаблон страницы. Выводим результат на экран"
      ]
    },
    {
      "name": "Данные из формы",
      "states": [
        "Вначале убедимся, что форма была отправлена. Для этого проверяем метод, которым была запрошена страница. Если метод POST - значит этот сценарий был вызван отправкой формы",
        "Проверим, был ли загружен файл. Поле для загрузки файла в форме называется 'gif_img', поэтому нам следует искать в массиве $_FILES одноименный ключ. Если таковой найден, то мы можем получить имя загруженного файла",
        "Выполняем копирование загруженного файла в директорию, где хранятся все гифки",
        "Проверяем существование переменной $path - в ней должно быть название файла. Если переменная существует, то добавляем в массив с гифкой новое значение - путь к изображению",
        "Подключаем шаблон страницы просмотра гифки. В этот шаблон мы передаем ассоциативный массив гифки",
        "Если форма не была отправлены, то мы должны показать страницу с этой формой",
        "Подключаем лейаут и шаблон страницы. Выводим результат на экран"
      ]
    },
    {
      "name": "Валидация формы",
      "states": [
        "Вначале убедимся, что форма была отправлена. Для этого проверяем метод, которым была запрошена страница. Если метод POST - значит этот сценарий был вызван отправкой формы",
        "В массиве $_POST содержатся все данные из формы. Копируем его в переменную $gif. Затем мы должны определить список полей, которые собираемся валидировать. Каждому полю также надо дать описательное название, чтобы показывать его при выводе ошибок. Также мы определяем пустой массив $errors, который будем заполнять ошибками валидации",
        "Обходим массив $_POST. Здесь в переменной $key будет имя поля (из аттрибута name), а в переменной $value - его значение (то что ввел пользователь). Далее мы проверяем существование каждого поля в списке обязательных к заполнению. И если оно там есть, а также поле не заполнено, то добавляем ошибку валидации в список ошибок",
        "Проверим, был ли загружен файл. Поле для загрузки файла в форме называется 'gif_img', поэтому нам следует искать в массиве $_FILES одноименный ключ. Если таковой найден, то мы можем получить имя загруженного файла",
        "С помощью стандартной функции finfo_ можно получить информацию о типе файле",
        "Если тип загруженного файла не является Gif-анимацией, то добавляем новую ошибку в список ошибок валидации",
        "Если файл соответствует ожидаемому типу, то мы копируем его в директорию где лежат все гифки, а также добавляем путь к загруженной гифки в массив $gif",
        "Загрузка файла - обязательное условие успешной валидации формы. Поэтому если он не был загружен, добавляем ошибку",
        "Здесь мы проверяем длину массива с ошибками. Если он не пустой, значит были ошибки и мы должны показать их пользователю вместе с формой. Для этого подключаем шаблон формы и передаем туда массив, где будут заполненные поля, а также список ошибок",
        "Если массив ошибок пуст, значит валидации прошла успешно. По сценарию в этом случае показываем страницу просмотра гифки, где будут данные из формы",
        "Если метод не POST, значит форма не была отправлена и валидировать ничего не надо, поэтому просто подключаем шаблон показа формы",
        "Подключаем лейаут и передаем туда шаблон страницы. Выводим результат на экран"
      ]
    }
  ]
}